{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "API documentation for Goosetrack-backend",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    {
      "url": "https://goose-track-backend.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "User info",
      "description": "Users endpoints"
    },
      {
        "name": "Tasks",
        "description": "Tasks endpoints"
      }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration body",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Registration success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "409": {
            "description": "Email '${email}' is already in use",
            "content": {}
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login body",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {}
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": ["User info"],
        "summary": "All information about user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Current user information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInformationResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          }
        }
      }
    },
    "/api/user/logout": {
      "post": {
        "tags": ["User info"],
        "summary": "User logout",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout success",
            "content": {}
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          }
        }
      }
    },
    "/api/tasks ": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks by user ID",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Tasks list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          }
        }
      }
    },
    "/api/tasks": {
      "post": {
        "tags": ["Tasks"],
        "summary": "Add new task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "description": "Add new task body",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddTaskRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "New task body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTaskResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          },
          "400": {
            "description": "Request validation error",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{taskId} ": {
      "patch": {
        "tags": ["Tasks"],
        "summary": "Update task",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Update task body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated task body",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateTaskResponse"
                }
              }
            }
          },

          "400": {
            "description": "Request validation error",
            "content": {}
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          },
          "404": {
            "description": "Task with id (request id) was not  found",
            "content": {}
          }
        }
      }
    },
    "/api/tasks/{taskId}": {
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete task by id",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "taskId",
            "required": true,
            "description": "Task id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task is deleted",
            "content": {}
          },
          "401": {
            "description": "Not authorized-no valid token/Not authorized user",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Peter Petigry"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password. Min 5, max 20 characters , 1 upper case letter, 1 lower case letter, 1 numeric digit",
            "example": "1234qwerl"
          }
        }
      },"RegistrationResponse":{
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "format": "string"
          },
          "user": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "User name",
                "example": "name"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "example": "email"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "1234qwer"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session's access token (needed for all requests)",
            "format": "string"
          },
          "user": {
            "type": "object",
            "properties": {
                "name": {
                "type": "string",
                "description": "User name",
                "example": "name"
              },
              "email": {
                "type": "string",
                "description": "User email",
                "example": "email"
              }
            }
          }
        }
      },
      "UserInformationResponse":{
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Peter Petigry"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "phone": {
            "type": "string",
            "description": "User's phone",
            "example": "3806972563477"
          },
          "birthday":{
            "type": "string",
            "description": "User's birthday",
            "example": "25081995"
          },
          "skype":{
            "type": "string",
            "description": "User's skype nickname",
            "example": "nickname"
          },
          "userPhoto":{
            "type": "string",
            "description": "User's photo url",
            "example": "https://cloudinary.com/userphoto"
          }
        }
      },
      "TasksListResponse":{
        "type": "array",
        "items": {
          "type": "object",
          "properties":{
            "_id": {
              "type": "string",
              "example": "6447c0d3759f6d5812ba43cc"
            },
            "title": {
              "type": "string",
              "example": "Meeting with EPAM Recruiter"
            },
            "date": {
              "type": "string",
              "example": "2023-04-25T00:00:00.000+00:00"
            },
            "start": {
              "type": "string",
              "example": "09:15"
            },
            "end": {
              "type": "string",
              "example": "10:15"
            },
            "priority": {
              "type": "string",
              "example": "low"
            },
            "column": {
              "type": "string",
              "example": "To do"
            },
            "owner": {
              "type": "string",
              "example": "64459b53c66e5b360e408983"
            },
            "createdAt": {
              "type": "string",
              "example": "2023-04-25T12:00:19.363+00:00"
            },
            "updatedAt": {
              "type": "string",
              "example": "2023-04-25T12:00:19.363+00:00"
            }
          }
        }
      },
      "AddTaskRequest":{
        "required": ["title", "date", "start","end", "priority"],
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the task",
            "example": "Get an offer from EPAM"
          },
          "date": {
            "type": "string",
            "description": "The date when task should be done",
            "example": "2023-05-18"
          },
          "start": {
            "type": "string",
            "description": "The time when task should be started",
            "example": "09:30"
          },
          "end": {
            "type": "string",
            "description": "The time when task should be ended",
            "example": "10:30"
          },
          "priority": {
            "type": "string",
            "description": "Task priority. One of these: low, medium, high",
            "example": "high"
          }
        }
      },
      "AddTaskResponse":{
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Get an offer from EPAM"
          },
          "date": {
            "type": "string",
            "example": "2023-05-18"
          },
          "start": {
            "type": "string",
            "example": "09:30"
          },
          "end": {
            "type": "string",
            "example": "10:30"
          },
          "priority": {
            "type": "string",
            "example": "high"
          },
          "column": {
            "type": "string",
            "example": "To do"
          },
          "owner": {
            "type": "string",
            "example": "64459b53c66e5b360e408983"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-04-25T12:00:19.363+00:00"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-04-25T12:00:19.363+00:00"
          }
        }
      },
      "UpdateTaskRequest":{
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "Name of the task",
            "example": "Get an offer from EPAM"
          },
          "date": {
            "type": "string",
            "description": "The date when task should be done",
            "example": "2023-05-18"
          },
          "start": {
            "type": "string",
            "description": "The time when task should be started",
            "example": "09:30"
          },
          "end": {
            "type": "string",
            "description": "The time when task should be ended",
            "example": "10:30"
          },
          "priority": {
            "type": "string",
            "description": "Task priority. One of these: low, medium, high",
            "example": "high"
          },
          "column":{
            "type": "string",
            "description": "Task's state",
            "example": "In progress"
          }
        }
      },
      "UpdateTaskResponse":{
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "6449156e7504f5b2e5ecd195"
          },
          "title": {
            "type": "string",
            "example": "Get an offer from EPAM"
          },
          "date": {
            "type": "string",
            "example": "2023-05-18"
          },
          "start": {
            "type": "string",
            "example": "09:30"
          },
          "end": {
            "type": "string",
            "example": "10:30"
          },
          "priority": {
            "type": "string",
            "example": "high"
          },
          "column": {
            "type": "string",
            "example": "In progress"
          },
          "owner": {
            "type": "string",
            "example": "64459b53c66e5b360e408983"
          },
          "createdAt": {
            "type": "string",
            "example": "2023-04-26T12:13:34.763Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2023-04-26T12:47:17.165Z"
          }
        }
      }
    }
  }
}


